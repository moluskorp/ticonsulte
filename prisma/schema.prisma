// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String        @id @default(uuid())
  email           String        @unique
  username        String        @unique
  password        String
  is_active       Boolean
  branch_office   Branch_office @relation(fields: [branch_officeId], references: [id])
  branch_officeId String
}

model Company {
  id            String          @id @default(uuid())
  legacy_id     Int
  name          String
  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt()
  Branch_office Branch_office[]
}

model Branch_office {
  id         String     @id @default(uuid())
  legacy_id  Int
  name       String
  main       Boolean
  company    Company    @relation(fields: [companyId], references: [id])
  cnpj       String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt()
  companyId  String
  Entrance   Entrance[]
  Device     Device[]
  Visitor    Visitor[]
  User       User[]
}

model Entrance {
  id              String        @id @default(uuid())
  legacy_id       Int
  branch_office   Branch_office @relation(fields: [branch_officeId], references: [id])
  name            String
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt()
  branch_officeId String
  Device          Device[]
  Visitor         Visitor[]
}

model Device {
  id              String        @id @default(uuid())
  legacy_id       Int
  code            String
  branch_office   Branch_office @relation(fields: [branch_officeId], references: [id])
  entrance        Entrance      @relation(fields: [entranceId], references: [id])
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt()
  device_key      String        @default(uuid())
  branch_officeId String
  entranceId      String
  Visitor         Visitor[]
}

model Visitor {
  id              String        @id @default(uuid())
  legacy_id       Int           @default(autoincrement())
  branch_office   Branch_office @relation(fields: [branch_officeId], references: [id])
  date            DateTime
  device          Device        @relation(fields: [deviceId], references: [id])
  entrance        Entrance      @relation(fields: [entranceId], references: [id])
  people_in       Int
  people_out      Int
  summarized      Boolean
  created_at      DateTime      @default(now())
  updated_at      DateTime      @updatedAt()
  branch_officeId String
  deviceId        String
  entranceId      String
}
